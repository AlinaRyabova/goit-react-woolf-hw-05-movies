{"version":3,"file":"static/js/736.9bcf6c75.chunk.js","mappings":"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","sources":["MovieApi/MovieApi.jsx","components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '3a1f94f312e9e48e882bb6b4b1db8ab3';\n\nexport const fetchTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nexport const fetchSearchByKeyword = async keyword => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${keyword}`\n  );\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchCast = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const fetchReviews = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  list-style-type: none;\n`;\n\nexport const Text = styled.p`\n  font-weight: 600;\n  font-size: 18px;\n  margin-bottom: 10px;\n`;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchCast } from 'MovieApi/MovieApi';\nimport Loader from 'components/Loader/Loader';\nimport { List, Text } from './Cast.styled';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [actors, setActors] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchActors = async () => {\n      setLoading(true);\n\n      try {\n        const actorsData = await fetchCast(movieId);\n        setActors(actorsData);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchActors();\n  }, [movieId]);\n\n  return (\n    <div>\n      {loading ? <Loader /> : null}\n\n      <List>\n        {actors.map(({ id, profile_path, original_name, name, character }) => (\n          <li key={id}>\n            <img\n              width=\"200px\"\n              src={\n                profile_path\n                  ? `https://image.tmdb.org/t/p/w500${profile_path}`\n                  : `https://ichef.bbci.co.uk/news/640/cpsprodpb/C7CA/production/_104864115_b1fef570-1bdf-441d-9724-3a72e5d46e91.jpg`\n              }\n              alt={original_name}\n            />\n            <Text>{name}</Text>\n            <Text>Character: {character}</Text>\n          </li>\n        ))}\n      </List>\n    </div>\n  );\n};\n\nexport default Cast;\n"],"names":["axios","API_KEY","fetchTrending","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","concat","sent","abrupt","data","results","stop","apply","arguments","fetchSearchByKeyword","_ref2","_callee2","keyword","_context2","_x","fetchMovieDetails","_ref3","_callee3","movieId","_context3","_x2","fetchCast","_ref4","_callee4","_context4","cast","_x3","fetchReviews","_ref5","_callee5","_context5","_x4","List","styled","_templateObject","_taggedTemplateLiteral","Text","_templateObject2","useParams","_useState","useState","_useState2","_slicedToArray","actors","setActors","_useState3","_useState4","loading","setLoading","useEffect","fetchActors","actorsData","t0","console","log","finish","_jsxs","children","_jsx","Loader","map","id","profile_path","original_name","name","character","width","src","alt"],"sourceRoot":""}