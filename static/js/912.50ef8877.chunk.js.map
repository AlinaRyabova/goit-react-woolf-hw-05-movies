{"version":3,"file":"static/js/912.50ef8877.chunk.js","mappings":"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","sources":["MovieApi/MovieApi.jsx","Page/MovieDetails/MovieDetails.styled.jsx","Page/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '3a1f94f312e9e48e882bb6b4b1db8ab3';\n\nexport const fetchTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nexport const fetchSearchByKeyword = async keyword => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${keyword}`\n  );\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchCast = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const fetchReviews = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.div`\n  display: flex;\n  margin: 24px;\n  gap: 24px;\n`;\n\nexport const List = styled.ul`\n  display: inline-flex;\n  gap: 12px;\n  list-style: none;\n  margin: 0;\n  padding: 0;\n  list-style-type: none;\n`;\n\nexport const ListInfo = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n  list-style: none;\n  margin: 0;\n  padding: 0;\n  list-style-type: none;\n`;\n\nexport const LinkInfo = styled(Link)`\n  text-decoration: none;\n  font-weight: 600;\n  font-size: 18px;\n  color: #5a0341;\n`;\n\nexport const Button = styled.button`\n  padding: 8px 8px;\n  font: inherit;\n  cursor: pointer;\n  border-radius: 8px;\n  border: 3px solid #57035f;\n  color: #57044c;\n  font-weight: 400;\n  font-size: 20px;\n`;\n","import React, { useEffect, useState } from 'react';\nimport { useParams, Link, Outlet, useLocation } from 'react-router-dom';\nimport { fetchMovieDetails } from 'MovieApi/MovieApi';\nimport Loader from 'components/Loader/Loader';\nimport { Container, List, ListInfo, LinkInfo } from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieInfo, setMovieInfo] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const location = useLocation();\n\n  useEffect(() => {\n    const fetchMovieDetailsFilms = async () => {\n      try {\n        setLoading(true);\n        const detailMovie = await fetchMovieDetails(movieId);\n        setMovieInfo(detailMovie);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchMovieDetailsFilms();\n  }, [movieId]);\n\n  if (!movieInfo) {\n    return null;\n  }\n\n  const {\n    title,\n    release_date,\n    popularity,\n    overview,\n    genres,\n    poster_path,\n    original_title,\n  } = movieInfo;\n\n  return (\n    <>\n      <Link\n        to={location.state?.from ?? '/'}\n        style={{\n          textDecoration: 'none',\n          fontWeight: 600,\n          fontSize: '18px',\n          color: '#5a0341',\n        }}\n      >\n        Go back\n      </Link>\n      {loading && <Loader />}\n\n      <Container>\n        <img\n          width=\"300px\"\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/w500${poster_path}`\n              : 'https://ichef.bbci.co.uk/news/640/cpsprodpb/C7CA/production/_104864115_b1fef570-1bdf-441d-9724-3a72e5d46e91.jpg'\n          }\n          alt={original_title}\n        />\n\n        <div>\n          <h1>\n            {title} ({release_date.slice(0, 4)})\n          </h1>\n          <p>User score: {popularity}</p>\n          <h2>Overview</h2>\n          <p>{overview}</p>\n          <h2>Genres</h2>\n          <List>\n            {genres.map(genre => (\n              <li key={genre.id}>{genre.name}</li>\n            ))}\n          </List>\n        </div>\n      </Container>\n\n      <hr />\n\n      <div>\n        <h3>Additional information</h3>\n        <ListInfo>\n          <li>\n            <LinkInfo to=\"cast\">Cast</LinkInfo>\n          </li>\n          <li>\n            <LinkInfo to=\"reviews\">Reviews</LinkInfo>\n          </li>\n        </ListInfo>\n        <hr />\n        <Outlet />\n      </div>\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["axios","API_KEY","fetchTrending","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","concat","sent","abrupt","data","results","stop","apply","arguments","fetchSearchByKeyword","_ref2","_callee2","keyword","_context2","_x","fetchMovieDetails","_ref3","_callee3","movieId","_context3","_x2","fetchCast","_ref4","_callee4","_context4","cast","_x3","fetchReviews","_ref5","_callee5","_context5","_x4","Container","styled","_templateObject","_taggedTemplateLiteral","List","_templateObject2","ListInfo","_templateObject3","LinkInfo","Link","_templateObject4","_templateObject5","_location$state$from","_location$state","useParams","_useState","useState","_useState2","_slicedToArray","movieInfo","setMovieInfo","_useState3","_useState4","loading","setLoading","location","useLocation","useEffect","fetchMovieDetailsFilms","detailMovie","t0","console","log","finish","title","release_date","popularity","overview","genres","poster_path","original_title","_jsxs","_Fragment","children","_jsx","to","state","from","style","textDecoration","fontWeight","fontSize","color","Loader","width","src","alt","slice","map","genre","name","id","Outlet"],"sourceRoot":""}